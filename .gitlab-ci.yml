stages:
  - build
  - benchmark
  - benchmark-completion

variables:
  PYTHONUNBUFFERED: "true"

.benchmark-settings:
  executors: &EXECUTORS |
    export EXECUTORS=(
      # e:Java-native
      #
      # e:Java-int
      # e:Java-C2-jit
      # e:Java8-int
      # e:Java8-C2-jit

      # e:CSOM-int
      e:SOMpp-int

      # e:TruffleSOM-ast-HotspotCE-jit-main
      # e:TruffleSOM-ast-HotspotEE-jit-main
      # e:TruffleSOM-ast-NativeEE-int-main
      #
      # e:TruffleSOM-bc-HotspotCE-jit-main
      # e:TruffleSOM-bc-HotspotEE-jit-main
      # e:TruffleSOM-bc-NativeEE-int-main
      #
      # e:TruffleSOM-ast-NativeEE-int-uber
      # e:TruffleSOM-ast-NativeEE-int-super
      #
      # e:PySOM-ast-jit
      # e:PySOM-ast-int
      # e:PySOM-bc-jit
      # e:PySOM-bc-int
      #
      # e:Node-int
      # e:Node-jit
      # e:GraalJS-HotspotEE-jit
      # e:GraalJS-NativeEE-int
      #
      # e:CPython-int
      # e:PyPy-jit
      # e:PyPy-int
      # e:GraalPython-HotspotEE-jit
      # e:GraalPython-NativeEE-int
      #
      # e:CRuby-int
      # e:CRuby-y-jit
      # e:TruffleRuby-HotspotEE-jit
      # e:TruffleRuby-NativeEE-int
    )
  params-build: &PARAMS_BUILD export PARAMS="-d -v -f --setup-only --disable-data-reporting"
  params-run:   &PARAMS_RUN   export PARAMS="-f --without-building"


before_script:
  - git submodule update --init --recursive

build-y1:
  stage: build
  tags: [yuria]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - cp -r scripts ~/.local/
    - rebench $PARAMS codespeed.conf all "${EXECUTORS[@]}"

build-y2:
  stage: build
  tags: [yuria2]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - cp -r scripts ~/.local/
    - rebench $PARAMS codespeed.conf all "${EXECUTORS[@]}"

build-y3:
  stage: build
  tags: [yuria3]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - cp -r scripts ~/.local/
    - rebench $PARAMS codespeed.conf all "${EXECUTORS[@]}"


deltablue:
  stage: benchmark
  needs: ["build-y1"]
  tags: [yuria]
  script:
    - *EXECUTORS
    - *PARAMS_RUN
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:DeltaBlue

richards:
  stage: benchmark
  needs: ["build-y2"]
  tags: [yuria2]
  script:
    - *EXECUTORS
    - *PARAMS_RUN
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Richards

json:
  stage: benchmark
  needs: ["build-y3"]
  tags: [yuria3]
  script:
    - *EXECUTORS
    - *PARAMS_RUN
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Json

cd:
  stage: benchmark
  needs: ["build-y1"]
  tags: [yuria]
  script:
    - *EXECUTORS
    - *PARAMS_RUN
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:CD

havlak:
  stage: benchmark
  needs: ["build-y2"]
  tags: [yuria2]
  script:
    - *EXECUTORS
    - *PARAMS_RUN
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Havlak

bounce:
  stage: benchmark
  needs: ["build-y3"]
  tags: [yuria3]
  script:
    - *EXECUTORS
    - *PARAMS_RUN
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Bounce

list:
  stage: benchmark
  needs: ["build-y1"]
  tags: [yuria]
  script:
    - *EXECUTORS
    - *PARAMS_RUN
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:List

mandelbrot:
  stage: benchmark
  needs: ["build-y2"]
  tags: [yuria3]
  script:
    - *EXECUTORS
    - *PARAMS_RUN
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Mandelbrot

nbody:
  stage: benchmark
  needs: ["build-y3"]
  tags: [yuria3]
  script:
    - *EXECUTORS
    - *PARAMS_RUN
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:NBody

permute:
  stage: benchmark
  needs: ["build-y1"]
  tags: [yuria]
  script:
    - *EXECUTORS
    - *PARAMS_RUN
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Permute

queens:
  stage: benchmark
  needs: ["build-y2"]
  tags: [yuria2]
  script:
    - *EXECUTORS
    - *PARAMS_RUN
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Queens

sieve:
  stage: benchmark
  needs: ["build-y3"]
  tags: [yuria3]
  script:
    - *EXECUTORS
    - *PARAMS_RUN
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Sieve

storage:
  stage: benchmark
  needs: ["build-y1"]
  tags: [yuria]
  script:
    - *EXECUTORS
    - *PARAMS_RUN
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Storage

towers:
  stage: benchmark
  needs: ["build-y3"]
  tags: [yuria3]
  script:
    - *EXECUTORS
    - *PARAMS_RUN
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Towers

report-completion:
  stage: benchmark-completion
  tags: [yuria]
  script:
    - rebench --experiment="CI ID $CI_PIPELINE_ID" --report-completion codespeed.conf
