stages:
  - build
  - benchmark
  - benchmark-completion

variables:
  PYTHONUNBUFFERED: "true"

.benchmark-settings:
  executors: &EXECUTORS |
    export EXECUTORS=(
      #e:TruffleSOM-ast-HotspotCE-jit
      #e:TruffleSOM-ast-HotspotCE-jit-no-lower-prims
      #e:TruffleSOM-ast-HotspotCE-jit-no-inline-caching
      #e:TruffleSOM-ast-HotspotCE-jit-no-inlining-control-structs
      #e:TruffleSOM-ast-HotspotCE-jit-no-global-caching
      #e:TruffleSOM-ast-HotspotCE-jit-no-supernodes
      #
      #e:TruffleSOM-bc-HotspotCE-jit
      #e:TruffleSOM-bc-HotspotCE-jit-no-lower-prims
      #e:TruffleSOM-bc-HotspotCE-jit-no-inline-caching
      #e:TruffleSOM-bc-HotspotCE-jit-no-inlining-control-structs
      #e:TruffleSOM-bc-HotspotCE-jit-no-global-caching
      #e:TruffleSOM-bc-HotspotCE-jit-no-quickening
      #e:TruffleSOM-bc-HotspotCE-jit-no-superinstructions

      e:TruffleSOM-ast-NativeCE-int
      e:TruffleSOM-ast-NativeCE-int-no-lower-prims
      e:TruffleSOM-ast-NativeCE-int-no-inline-caching
      e:TruffleSOM-ast-NativeCE-int-no-inlining-control-structs
      e:TruffleSOM-ast-NativeCE-int-no-global-caching
      e:TruffleSOM-ast-NativeCE-int-no-supernodes

      e:TruffleSOM-bc-NativeCE-int
      e:TruffleSOM-bc-NativeCE-int-no-lower-prims
      e:TruffleSOM-bc-NativeCE-int-no-inline-caching
      e:TruffleSOM-bc-NativeCE-int-no-inlining-control-structs
      e:TruffleSOM-bc-NativeCE-int-no-global-caching
      e:TruffleSOM-bc-NativeCE-int-no-quickening
      e:TruffleSOM-bc-NativeCE-int-no-superinstructions

      #e:PySOM-ast-jit
      #e:PySOM-ast-jit-no-lower-prims
      #e:PySOM-ast-jit-no-inline-caching
      #e:PySOM-ast-jit-no-inlining-control-structs
      #e:PySOM-ast-jit-no-inlining-global-caching
      #
      #e:PySOM-ast-int
      #e:PySOM-ast-int-no-lower-prims
      #e:PySOM-ast-int-no-inline-caching
      #e:PySOM-ast-int-no-inlining-control-structs
      #e:PySOM-ast-int-no-inlining-global-caching
      #
      #e:PySOM-bc-jit
      #e:PySOM-bc-jit-no-lower-prims
      #e:PySOM-bc-jit-no-inline-caching
      #e:PySOM-bc-jit-no-inlining-control-structs
      #e:PySOM-bc-jit-no-inlining-global-caching
      #e:PySOM-bc-jit-no-quickening
      #e:PySOM-bc-jit-no-superinstructions
      #
      #e:PySOM-bc-int
      #e:PySOM-bc-int-no-lower-prims
      #e:PySOM-bc-int-no-inline-caching
      #e:PySOM-bc-int-no-inlining-control-structs
      #e:PySOM-bc-int-no-inlining-global-caching
      #e:PySOM-bc-int-no-quickening
      #e:PySOM-bc-int-no-superinstructions

      # e:Java-native
      #
      #e:Java-int
      #e:Java-C2-jit
      #e:Java8-int
      #e:Java8-C2-jit

      #e:Java20-int

      #e:Node-int
      #e:Node-jit
    )
  params-build: &PARAMS_BUILD export PARAMS="-d -v -f --setup-only --disable-data-reporting"
  params-run:   &PARAMS_RUN   export PARAMS="-f --without-building"


before_script:
  - git submodule update --init --recursive

build-y1:
  stage: build
  tags: [yuria]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - cp -r scripts ~/.local/
    - rebench $PARAMS codespeed.conf all "${EXECUTORS[@]}" s:*:List

build-y2:
  stage: build
  tags: [yuria2]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - cp -r scripts ~/.local/
    - rebench $PARAMS codespeed.conf all "${EXECUTORS[@]}" s:*:List

build-y3:
  stage: build
  tags: [yuria3]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - cp -r scripts ~/.local/
    - rebench $PARAMS codespeed.conf all "${EXECUTORS[@]}" s:*:List


# TO RESTORE: benchmarks are meant to use PARAMS_RUN
deltablue:
  stage: benchmark
  needs: ["build-y1"]
  tags: [yuria]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:DeltaBlue

richards:
  stage: benchmark
  needs: ["build-y2"]
  tags: [yuria2]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Richards

json:
  stage: benchmark
  needs: ["build-y3"]
  tags: [yuria3]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Json

cd:
  stage: benchmark
  needs: ["build-y1"]
  tags: [yuria]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:CD

havlak:
  stage: benchmark
  needs: ["build-y2"]
  tags: [yuria2]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Havlak

bounce:
  stage: benchmark
  needs: ["build-y3"]
  tags: [yuria3]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Bounce

list:
  stage: benchmark
  needs: ["build-y1"]
  tags: [yuria]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:List

mandelbrot:
  stage: benchmark
  needs: ["build-y2"]
  tags: [yuria3]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Mandelbrot

nbody:
  stage: benchmark
  needs: ["build-y3"]
  tags: [yuria3]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:NBody

permute:
  stage: benchmark
  needs: ["build-y1"]
  tags: [yuria]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Permute

queens:
  stage: benchmark
  needs: ["build-y2"]
  tags: [yuria2]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Queens

sieve:
  stage: benchmark
  needs: ["build-y3"]
  tags: [yuria3]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Sieve

storage:
  stage: benchmark
  needs: ["build-y1"]
  tags: [yuria]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Storage

towers:
  stage: benchmark
  needs: ["build-y3"]
  tags: [yuria3]
  script:
    - *EXECUTORS
    - *PARAMS_BUILD
    - rebench $PARAMS --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" codespeed.conf all "${EXECUTORS[@]}" s:*:Towers

report-completion:
  stage: benchmark-completion
  tags: [yuria]
  script:
    - rebench --experiment="CI ID $CI_PIPELINE_ID" --report-completion codespeed.conf
