# -*- mode: yaml -*-
# Config file for ReBench
default_experiment: all
default_data_file: 'benchmark.data'

.are_we_fast_yet:
    ## this is ignored by rebench
    iteration_numbers:
        fast_vm:      &FAST_VM      1000
        slow_vm:      &SLOW_VM      250
        slower_vm:    &SLOWER_VM    85
        very_slow_vm: &VERY_SLOW_VM 25

runs:
  max_invocation_time: 1800

.reporting:
    rebenchdb:
        # this url needs to point to the API endpoint
        db_url: https://rebench.stefan-marr.de/rebenchdb
        repo_url: https://github.com/smarr/awfy-runs
        record_all: true # make sure everything is recorded
        project_name: Are We Fast Yet

# definition of benchmark suites
benchmark_suites:
    som-steady:
        gauge_adapter: RebenchLog
        command: " -cp .:Core:CD:DeltaBlue:Havlak:Json:NBody:Richards:../../implementations/TruffleSOM/Smalltalk Harness.som  %(benchmark)s %(iterations)s "
        iterations: *FAST_VM ## the number iterations measured
        location: awfy/benchmarks/SOM
        benchmarks: &BENCHMARKS
            - DeltaBlue:
                extra_args: 12000
                codespeed_name: "[peak] DeltaBlue"
            - Richards:
                extra_args: 100
                codespeed_name: "[peak] Richards"
            - Json:
                extra_args: 100
                codespeed_name: "[peak] Json"
            - CD:
                extra_args: 250
                codespeed_name: "[peak] CD"
            - Havlak:
                extra_args: 1500
                codespeed_name: "[peak] Havlak"
            
            - Bounce:
                extra_args: 1500
                codespeed_name: "[peak] Bounce"
            - List:
                extra_args: 1500
                codespeed_name: "[peak] List"
            - Mandelbrot:
                extra_args: 500
                codespeed_name: "[peak] Mandelbrot"
            - NBody:
                extra_args: 250000
                codespeed_name: "[peak] NBody"
            - Permute:
                extra_args: 1000
                codespeed_name: "[peak] Permute"
            - Queens:
                extra_args: 1000
                codespeed_name: "[peak] Queens"
            - Sieve:
                extra_args: 3000
                codespeed_name: "[peak] Sieve"
            - Storage:
                extra_args: 1000
                codespeed_name: "[peak] Storage"
            - Towers:
                extra_args: 600
                codespeed_name: "[peak] Towers"

    som-interp:
        gauge_adapter: RebenchLog
        command: " -cp .:Core:CD:DeltaBlue:Havlak:Json:NBody:Richards:../../implementations/TruffleSOM/Smalltalk Harness.som  %(benchmark)s %(iterations)s "
        iterations: *VERY_SLOW_VM ## the number iterations measured
        location: awfy/benchmarks/SOM
        benchmarks: *BENCHMARKS

    steady-som-slower:
        gauge_adapter: RebenchLog
        command: " -cp .:Core:CD:DeltaBlue:Havlak:Json:NBody:Richards:../../implementations/TruffleSOM/Smalltalk Harness.som  %(benchmark)s %(iterations)s "
        iterations: *SLOWER_VM
        location: awfy/benchmarks/SOM
        benchmarks: *BENCHMARKS

    steady-somns:
        gauge_adapter: RebenchLog
        command: " Harness.ns %(benchmark)s %(iterations)s "
        location: awfy/benchmarks/SOMns
        iterations: *FAST_VM ## the number iterations measured
        benchmarks: *BENCHMARKS

    interp-somns:
        gauge_adapter: RebenchLog
        command: " Harness.ns %(benchmark)s %(iterations)s "
        location: awfy/benchmarks/SOMns
        iterations: *VERY_SLOW_VM ## the number iterations measured
        benchmarks: *BENCHMARKS


    steady-java:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Java
        command: " -cp benchmarks.jar Harness %(benchmark)s %(iterations)s "
        iterations: *FAST_VM ## the number iterations measured
        benchmarks: *BENCHMARKS
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
            ant jar

    interp-java:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Java
        command: " -cp benchmarks.jar Harness %(benchmark)s %(iterations)s "
        iterations: *VERY_SLOW_VM ## the number iterations measured
        benchmarks: *BENCHMARKS
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
            ant jar


    ruby-jit:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Ruby
        command: "harness.rb %(benchmark)s %(iterations)s "
        iterations: *FAST_VM ## the number iterations measured
        benchmarks: *BENCHMARKS
    
    steady-crystal:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Crystal
        command: "./harness %(benchmark)s %(iterations)s "
        iterations: *FAST_VM ## the number iterations measured
        benchmarks: *BENCHMARKS

    ruby-interp:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Ruby
        command: "harness.rb %(benchmark)s %(iterations)s "
        iterations: *VERY_SLOW_VM ## the number iterations measured
        benchmarks: *BENCHMARKS
    
    ruby-indy:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Ruby
        command: "harness.rb %(benchmark)s %(iterations)s "
        iterations: *SLOW_VM ## the number iterations measured
        benchmarks: *BENCHMARKS

    ruby-rbx:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Ruby
        command: "harness-rbx.rb %(benchmark)s %(iterations)s "
        iterations: *VERY_SLOW_VM ## the number iterations measured
        benchmarks: *BENCHMARKS
    
    js-jit:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/JavaScript
        command: "harness.js %(benchmark)s %(iterations)s "
        iterations: *FAST_VM
        benchmarks: *BENCHMARKS
    
    js-interp:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/JavaScript
        command: "harness.js %(benchmark)s %(iterations)s "
        iterations: *VERY_SLOW_VM
        benchmarks: *BENCHMARKS

    pharo:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Smalltalk
        command: "AWFY_Pharo.image run.st %(benchmark)s %(iterations)s "
        iterations: *SLOW_VM
        benchmarks: *BENCHMARKS

    squeak:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Smalltalk
        command: "AWFY_Squeak.image run.st %(benchmark)s %(iterations)s "
        iterations: *SLOW_VM
        benchmarks: *BENCHMARKS

    rsqueak:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Smalltalk
        command: "AWFY_RSqueak.image run.st %(benchmark)s %(iterations)s "
        iterations: *SLOW_VM
        benchmarks: *BENCHMARKS

    steady-lua:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Lua
        command: " harness.lua %(benchmark)s %(iterations)s "
        iterations: *SLOWER_VM ## the number iterations measured
        benchmarks: *BENCHMARKS

    interp-lua:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Lua
        command: " harness.lua %(benchmark)s %(iterations)s "
        iterations: *VERY_SLOW_VM ## the number iterations measured
        benchmarks: *BENCHMARKS

    python-interp:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Python
        command: "harness.py %(benchmark)s %(iterations)s "
        iterations: *VERY_SLOW_VM ## the number iterations measured
        benchmarks: *BENCHMARKS

    python-jit:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Python
        command: "harness.py %(benchmark)s %(iterations)s "
        iterations: *FAST_VM ## the number iterations measured
        benchmarks: *BENCHMARKS



executors:
    # Java
    Java8-int:
        path: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/
        executable: java
        args: "-Xint"
    Java17-int:
        path: /usr/lib/jvm/java-17-openjdk-amd64/bin/
        executable: java
        args: "-Xint"
    Java8-C2-jit:
        path: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/
        executable: java
    Java17-C2-jit:
        path: /usr/lib/jvm/java-17-openjdk-amd64/bin/
        executable: java
    Java-GraalCE-jit:
        path: /home/gitlab-runner/.local/graalvm-ce-java17-21.3.0/bin/
        executable: java
    Java-GraalEE-jit:
        path: /home/gitlab-runner/.local/graalvm-ee-java17-21.3.0/bin/
        executable: java
    # TODO
    # Java-NativeCE:
    #     path: ""
    #     executable: ""
    #     args: ""
    # Java-NativeEE:
    #     path: ""
    #     executable: ""
    #     args: ""

    # SOM VMs
    SOM-Java17-C2:
        path: awfy/implementations/SOM/
        executable: som.sh
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
            ant jar

    # TODO
    SOM-NativeCE:
        path: awfy/implementations/SOM/
        executable: som.sh
        build: [make]

    SOMpp:
        path: awfy/implementations/SOMpp/
        executable: som.sh
        args: " -H512MB "
        build: [make]
    SOMppOMR:
        path: awfy/implementations/SOMppOMR/
        executable: som.sh
        args: " -H512MB "
        build: [../build-sompp-omr.sh]

    TruffleSOM-ast-NativeCE-int:
        path: awfy/implementations/TruffleSOM
        executable: som
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
            ant native-ast -Dno.jit=true
    TruffleSOM-ast-NativeCE-jit:
        path: awfy/implementations/TruffleSOM
        executable: som
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
            ant native-ast -Dno.jit=false
    TruffleSOM-ast-CE-jit:
        path: awfy/implementations/TruffleSOM
        executable: som
        args: "-Dsom.interp=AST"
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
            ant compile

    TruffleSOM-bc-NativeCE-int:
        path: awfy/implementations/TruffleSOM
        executable: som
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
            ant native-ast -Dno.jit=true
    TruffleSOM-bc-NativeCE-jit:
        path: awfy/implementations/TruffleSOM
        executable: som
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
            ant native-ast -Dno.jit=false
    TruffleSOM-bc-CE-jit:
        path: awfy/implementations/TruffleSOM
        executable: som
        args: "-Dsom.interp=BC"
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
            ant compile

    TruffleSOM-Enterprise:
        path: awfy/implementations/
        executable: TruffleSOM-e.sh
        args: "-vv "
        build: [./build-som.sh]
    TruffleSOM-TOM:
        path: awfy/implementations/
        executable: TruffleSOM-TOM.sh
        args: "-vv "
        build: [./build-som.sh]
    TruffleSOM-TOM-Enterprise:
        path: awfy/implementations/
        executable: TruffleSOM-TOM-e.sh
        args: "-vv "
        build: [./build-som.sh]

    PySOM-ast-jit:
        path: awfy/implementations/PySOM
        executable: som-ast-jit
        build:
          - |
            SOM_INTERP=AST /home/gitlab-runner/.local/pypy2.7-v7.3.6-src/rpython/bin/rpython -Ojit src/main_rpython.py
    PySOM-ast-int:
        path: awfy/implementations/PySOM
        executable: som-ast-interp
        build:
          - |
            SOM_INTERP=AST /home/gitlab-runner/.local/pypy2.7-v7.3.6-src/rpython/bin/rpython src/main_rpython.py
    PySOM-bc-jit:
        path: awfy/implementations/PySOM
        executable: som-bc-jit
        build:
          - |
            SOM_INTERP=BC /home/gitlab-runner/.local/pypy2.7-v7.3.6-src/rpython/bin/rpython -Ojit src/main_rpython.py
    PySOM-bc-int:
        path: awfy/implementations/PySOM
        executable: som-bc-interp
        build:
          - |
            SOM_INTERP=BC /home/gitlab-runner/.local/pypy2.7-v7.3.6-src/rpython/bin/rpython src/main_rpython.py

    SOMns:
        path: awfy/implementations/SOMns
        executable: fast
        build: [../build-somns.sh]
    SOMnsInt:
        path: awfy/implementations/
        executable: SOMns.sh
        args: " -G "
        build: [./build-somns.sh]
    SOMns-Enterprise:
        path: awfy/implementations/
        executable: SOMns-e.sh
        build: [./build-somns.sh]

    # Ruby VMs
    TruffleRuby-CE-jit:
        path: /home/smarr/.local/truffleruby-21.1.0-linux-amd64/bin
        executable: truffleruby
    TruffleRuby-EE-jit:
        path: /home/smarr/.local/truffleruby-21.1.0-linux-amd64/bin
        executable: truffleruby
    TruffleRuby-NativeCE-jit:
        path: /home/smarr/.local/truffleruby-21.1.0-linux-amd64/bin
        executable: truffleruby
    TruffleRuby-NativeCE-int:
        path: /home/smarr/.local/truffleruby-21.1.0-linux-amd64/bin
        executable: truffleruby
    TruffleRuby-NativeEE-int:
        path: /home/smarr/.local/truffleruby-21.1.0-linux-amd64/bin
        executable: truffleruby
    TruffleRuby-NativeEE-jit:
        path: /home/smarr/.local/truffleruby-21.1.0-linux-amd64/bin
        executable: truffleruby
    
    CRuby27-int:
        path: /usr/bin
        executable: ruby2.7
    CRuby30-int:
        # https://rvm_io.global.ssl.fastly.net/binaries/ubuntu/20.04/x86_64/ruby-3.0.0.tar.bz2
        path: /home/gitlab-runner/.local/ruby-3.0.0/bin
        executable: ruby
    YJIT30-jit:
        path: ""
        executable: ""
        args: ""
    JRuby-jit:
        description: JRuby, running with a JVM that uses Graal as top-tier compiler
        path: awfy/implementations/
        executable: jruby-graal.sh

    Crystal:
        path: awfy/implementations/
        executable: crystal.sh
        build: [../benchmarks/Crystal/build.sh]

    # JavaScript VMs
    Node-jit:
        path: /usr/bin
        executable: node
    Node-int:
        path: /usr/bin
        executable: node
        args: " --jitless "
    GraalJS:
        path: awfy/implementations/
        executable: graaljs.sh

    Pharo:
      path: awfy/implementations/
      executable: pharo
      build: [./build-pharo.sh]
    Squeak:
      path: awfy/implementations/
      executable: squeak
      build: [./build-squeak.sh]
    RSqueak:
      path: awfy/implementations/
      executable: rsqueak.sh
      build: [./build-rsqueak.sh]

    LuaJIT2:
      path: awfy/implementations/
      executable: luajit2.sh
    Lua53:
      path: awfy/implementations/
      executable: lua53.sh
    
    PyPy-jit:
      path: /home/gitlab-runner/.local/pypy3.7-v7.3.4-linux64/bin
      executable: pypy3
    
    CPython-interp:
      executable: python3.10
    
    Pyston-jit:
      path: /home/gitlab-runner/.local
      executable: pyston3.8
    
    Cinder-jit:
      path: /home/gitlab-runner/Projects/cinder
      executable: python
      args: " -X jit "

    GraalPython-jit:
      path: /home/gitlab-runner/.local/graalpython-21.1.0-linux-amd64/bin
      executable: graalpython

experiments:
    java:
        executions:
            - Java8-C2-jit:
                suites: [steady-java]
            - Java17-C2-jit:
                 suites: [steady-java]
            - Java-GraalCE-jit:
                 suites: [steady-java]
            - Java-GraalEE-jit:
                 suites: [steady-java]
            # - Java-NativeCE:
            #      suites: [steady-java]
            # - Java-NativeEE:
            #      suites: [steady-java]
            - Java8-int:
                 suites: [interp-java]
            - Java17-int:
                 suites: [interp-java]

    interp-som:
        executions:
            - SOMnsInt:
                suites: [interp-somns]
    som:
        executions:
            - SOM-Java17-C2:
                suites: [som-interp]
            # - SOM-NativeCE:
            #     suites: [som-interp]

            - SOMpp:
                suites: [som-interp]
            - SOMppOMR:
                suites: [steady-som-slower]
            - SOMns:
                suites: [steady-somns]
            - SOMns-Enterprise:
                suites: [steady-somns]

            - TruffleSOM-ast-NativeCE-jit:
                suites: [som-steady]
            - TruffleSOM-ast-CE-jit:
                suites: [som-steady]
            - TruffleSOM-ast-NativeCE-int:
                suites: [som-interp]

            - TruffleSOM-bc-NativeCE-jit:
                suites: [som-steady]
            - TruffleSOM-bc-CE-jit:
                suites: [som-steady]
            - TruffleSOM-bc-NativeCE-int:
                suites: [som-interp]
            
            - PySOM-ast-jit:
                suites: [som-steady]
            - PySOM-ast-int:
                suites: [som-interp]
            - PySOM-bc-jit:
                suites: [som-steady]
            - PySOM-bc-int:
                suites: [som-interp]

    steady-crystal:
        suites:
            - steady-crystal
        executions:
            - Crystal

    js:
        executions:
            - Node-jit:
                suites: [js-jit]
            - Node-int:
                suites: [js-interp]

    ruby:
        executions:
            - CRuby27-int:
                suites: [ruby-interp]
            - CRuby30-int:
                suites: [ruby-interp]

            - TruffleRuby-CE-jit:
                suites: [ruby-jit]
            - TruffleRuby-EE-jit:
                suites: [ruby-jit]
            - TruffleRuby-NativeCE-jit:
                suites: [ruby-jit]
            - TruffleRuby-NativeEE-jit:
                suites: [ruby-jit]
            - TruffleRuby-NativeCE-int:
                suites: [ruby-interp]
            - TruffleRuby-NativeEE-int:
                suites: [ruby-interp]

    python:
      executions:
         - CPython-interp:
             suites: [python-interp]
         - Pyston-jit:
             suites: [python-interp]
         - Cinder-jit:
             suites: [python-interp]
         - PyPy-jit:
             suites: [python-jit]
         - GraalPython-jit:
             suites: [python-jit]

    smalltalk:
        executions:
          - Pharo:
              suites: [pharo]
          - Squeak:
              suites: [squeak]
          - RSqueak:
              suites: [rsqueak]

    lua:
        executions:
            - LuaJIT2:
                suites: [steady-lua]
            - Lua53:
                suites: [interp-lua]
