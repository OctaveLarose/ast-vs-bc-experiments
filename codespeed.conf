# -*- mode: yaml -*-
# Config file for ReBench
default_experiment: all
default_data_file: 'benchmark.data'

.are_we_fast_yet:
    ## this is ignored by rebench
    iteration_numbers:
        fast_vm:      &FAST_VM      1 # SHOULD BE 2000, LOWERED FOR TESTING
        slow_vm:      &SLOW_VM      1 # SHOULD BE 250, LOWERED FOR TESTING
        slower_vm:    &SLOWER_VM    85
        very_slow_vm: &VERY_SLOW_VM 15

runs:
  max_invocation_time: 3600

reporting:
    rebenchdb:
        # this url needs to point to the API endpoint
        db_url: https://rebench.stefan-marr.de/rebenchdb
        repo_url: https://github.com/smarr/awfy-runs
        record_all: true # make sure everything is recorded
        project_name: Are We Fast Yet

# definition of benchmark suites
benchmark_suites:
    som-steady:
        gauge_adapter: RebenchLog
        command: " -cp .:Core:CD:DeltaBlue:Havlak:Json:NBody:Richards:/home/gitlab-runner/.local/TruffleSOM/Smalltalk Harness.som  %(benchmark)s %(iterations)s "
        iterations: *FAST_VM ## the number iterations measured
        location: awfy/benchmarks/SOM
        benchmarks: &BENCHMARKS
            - DeltaBlue:
                extra_args: 10000
                codespeed_name: "[peak] DeltaBlue"
            - Richards:
                extra_args: 40
                codespeed_name: "[peak] Richards"
            - Json:
                extra_args: 80
                codespeed_name: "[peak] Json"
            - CD:
                extra_args: 250
                codespeed_name: "[peak] CD"
            - Havlak:
                extra_args: 1500
                codespeed_name: "[peak] Havlak"

            - Bounce:
                extra_args: 4000
                codespeed_name: "[peak] Bounce"
            - List:
                extra_args: 1000
                codespeed_name: "[peak] List"
            - Mandelbrot:
                extra_args: 1000
                codespeed_name: "[peak] Mandelbrot"
            - NBody:
                extra_args: 250000
                codespeed_name: "[peak] NBody"
            - Permute:
                extra_args: 1500
                codespeed_name: "[peak] Permute"
            - Queens:
                extra_args: 1000
                codespeed_name: "[peak] Queens"
            - Sieve:
                extra_args: 2500
                codespeed_name: "[peak] Sieve"
            - Storage:
                extra_args: 1000
                codespeed_name: "[peak] Storage"
            - Towers:
                extra_args: 1000
                codespeed_name: "[peak] Towers"

    som-interp:
        gauge_adapter: RebenchLog
        command: " -cp .:Core:CD:DeltaBlue:Havlak:Json:NBody:Richards:/home/gitlab-runner/.local/TruffleSOM/Smalltalk Harness.som  %(benchmark)s %(iterations)s "
        iterations: *VERY_SLOW_VM ## the number iterations measured
        invocations: 100
        location: awfy/benchmarks/SOM
        benchmarks: *BENCHMARKS

    java-steady:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Java
        command: " -cp benchmarks17.jar Harness %(benchmark)s %(iterations)s "
        iterations: *FAST_VM ## the number iterations measured
        benchmarks: *BENCHMARKS
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64/
            ant clean; ant jar
            mv benchmarks.jar benchmarks17.jar

    java-interp:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Java
        command: " -cp benchmarks17.jar Harness %(benchmark)s %(iterations)s "
        iterations: *VERY_SLOW_VM ## the number iterations measured
        invocations: 10
        benchmarks: *BENCHMARKS
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64/
            ant clean; ant jar
            mv benchmarks.jar benchmarks17.jar

    java8-steady:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Java
        command: " -cp benchmarks8.jar Harness %(benchmark)s %(iterations)s "
        iterations: *FAST_VM ## the number iterations measured
        benchmarks: *BENCHMARKS
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
            ant clean; ant jar
            mv benchmarks.jar benchmarks8.jar

    java8-interp:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Java
        command: " -cp benchmarks8.jar Harness %(benchmark)s %(iterations)s "
        iterations: *VERY_SLOW_VM ## the number iterations measured
        benchmarks: *BENCHMARKS
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
            ant clean; ant jar
            mv benchmarks.jar benchmarks8.jar

    java20-steady:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Java
        command: " -cp benchmarks20.jar Harness %(benchmark)s %(iterations)s "
        iterations: *FAST_VM ## the number iterations measured
        benchmarks: *BENCHMARKS
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/temurin-20-jdk-amd64/
            ant clean; ant jar
            mv benchmarks.jar benchmarks20.jar

    java20-interp:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Java
        command: " -cp benchmarks20.jar Harness %(benchmark)s %(iterations)s "
        iterations: *VERY_SLOW_VM ## the number iterations measured
        invocations: 10
        benchmarks: *BENCHMARKS
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/temurin-20-jdk-amd64/
            ant clean; ant jar
            mv benchmarks.jar benchmarks20.jar

    java-native:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/Java
        command: " %(benchmark)s %(iterations)s "
        iterations: *FAST_VM ## the number iterations measured
        benchmarks: *BENCHMARKS
        build:
          - |
            export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64/
            ant clean; ant jar
            /home/gitlab-runner/.local/graalvm-ee-java17-22.3.0/bin/native-image -cp benchmarks.jar Harness benchmarks

    js-jit:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/JavaScript
        command: "harness.js %(benchmark)s %(iterations)s "
        iterations: *FAST_VM
        benchmarks: *BENCHMARKS

    js-interp:
        gauge_adapter: RebenchLog
        location: awfy/benchmarks/JavaScript
        command: "harness.js %(benchmark)s %(iterations)s "
        iterations: *VERY_SLOW_VM
        invocations: 10
        benchmarks: *BENCHMARKS

executors:
    Java-native:
        path: awfy/benchmarks/Java
        executable: benchmarks

    Java-int:
        path: /usr/lib/jvm/java-17-openjdk-amd64/bin/
        executable: java
        args: -Xint
    Java-C2-jit:
        path: /usr/lib/jvm/java-17-openjdk-amd64/bin/
        executable: java
    Java8-int:
        path: /usr/lib/jvm/java-8-openjdk-amd64/bin/
        executable: java
        args: -Xint
    Java8-C2-jit:
        path: /usr/lib/jvm/java-8-openjdk-amd64/bin/
        executable: java
    Java20-int:
        path: /usr/lib/jvm/temurin-20-jdk-amd64/bin/
        executable: java
        args: -Xint
    Java20-C2-jit:
        path: /usr/lib/jvm/temurin-20-jdk-amd64/bin/
        executable: java

    .tsom-init: &TSOM_INIT
        - |
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64/
          export PATH=/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
          export LANG=en_GB.UTF-8
          git fetch --all && git checkout -f $SHA && git submodule update -f --init --recursive

    TruffleSOM-ast-HotspotCE-jit:
        path: /home/gitlab-runner/.local/TruffleSOM
        executable: som
        env:
          - SHA: "64ffec11a782d729ecfdf9c50c3b07f99e96349f"
        args: -Dsom.interp=AST
        build: 
            <<: *TSOM_INIT
            - |
              ant clean && ant compile

    TruffleSOM-bc-HotspotCE-jit:
        path: /home/gitlab-runner/.local/TruffleSOM
        executable: som
        env:
          - SHA: "64ffec11a782d729ecfdf9c50c3b07f99e96349f"
        args: -Dsom.interp=BC
        build: 
            <<: *TSOM_INIT
            - |
              ant clean && ant compile

    TruffleSOM-ast-NativeCE-int:
        path: /home/gitlab-runner/.local/TruffleSOM
        executable: som-native-interp-ast
        env:
          - SHA: "64ffec11a782d729ecfdf9c50c3b07f99e96349f"
        build: 
            <<: *TSOM_INIT
            - |
              ant clean && ant compile-som && ant compile native-ast -Dno.jit=true

    TruffleSOM-ast-NativeCE-int-no-lower-prims:
        path: /home/gitlab-runner/.local/TruffleSOM
        executable: som-native-interp-ast
        env:
          - SHA: "86c4856f1392bdda76162d97d19a2d8116d3631b"
        build: 
            <<: *TSOM_INIT
            - |
              ant clean && ant compile-som && ant compile native-ast -Dno.jit=true

    TruffleSOM-bc-NativeCE-int:
        path: /home/gitlab-runner/.local/TruffleSOM
        executable: som-native-interp-bc
                env:
          - SHA: "64ffec11a782d729ecfdf9c50c3b07f99e96349f"
        build: 
            <<: *TSOM_INIT
            - |
              ant clean && ant compile-som && ant compile native-bc -Dno.jit=true

    TruffleSOM-bc-NativeCE-int-no-lower-prims:
        path: /home/gitlab-runner/.local/TruffleSOM
        executable: som-native-interp-bc
                env:
          - SHA: "86c4856f1392bdda76162d97d19a2d8116d3631b"
        build: 
            <<: *TSOM_INIT
            - |
              ant clean && ant compile-som && ant compile native-bc -Dno.jit=true

    PySOM-ast-jit:
        path: /home/gitlab-runner/.local/PySOM
        executable: som-ast-jit
        build:
          - |
            # ast-vs-bc baseline commit
            export PATH=/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
            SHA=174bb750549c5ed40f071d56f4e1c7a147787ef6
            git fetch --all && git checkout -f $SHA && git submodule update -f --init --recursive
            SOM_INTERP=AST /home/gitlab-runner/.local/pypy2.7-v7.3.9-src/rpython/bin/rpython -Ojit src/main_rpython.py
    PySOM-ast-int:
        path: /home/gitlab-runner/.local/PySOM
        executable: som-ast-interp
        build:
          - |
            # ast-vs-bc baseline commit
            export PATH=/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
            SHA=174bb750549c5ed40f071d56f4e1c7a147787ef6
            git fetch --all && git checkout -f $SHA && git submodule update -f --init --recursive
            SOM_INTERP=AST /home/gitlab-runner/.local/pypy2.7-v7.3.9-src/rpython/bin/rpython src/main_rpython.py
    PySOM-bc-jit:
        path: /home/gitlab-runner/.local/PySOM
        executable: som-bc-jit
        build:
          - |
            export PATH=/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
            # ast-vs-bc baseline commit
            SHA=174bb750549c5ed40f071d56f4e1c7a147787ef6
            git fetch --all && git checkout -f $SHA && git submodule update -f --init --recursive
            SOM_INTERP=BC /home/gitlab-runner/.local/pypy2.7-v7.3.9-src/rpython/bin/rpython -Ojit src/main_rpython.py
    PySOM-bc-int:
        path: /home/gitlab-runner/.local/PySOM
        executable: som-bc-interp
        build:
          - |
            export PATH=/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
            # ast-vs-bc baseline commit
            SHA=174bb750549c5ed40f071d56f4e1c7a147787ef6
            git fetch --all && git checkout -f $SHA && git submodule update -f --init --recursive
            SOM_INTERP=BC /home/gitlab-runner/.local/pypy2.7-v7.3.9-src/rpython/bin/rpython src/main_rpython.py

    Node-jit:
        executable: node
    Node-int:
        executable: node
        args: --jitless


experiments:
    java:
        executions:
            - Java-native:
                 suites: [java-native]
            - Java-C2-jit:
                 suites: [java-steady]
            - Java-int:
                 suites: [java-interp]
            - Java8-C2-jit:
                 suites: [java8-steady]
            - Java8-int:
                 suites: [java8-interp]
            - Java20-C2-jit:
                 suites: [java20-steady]
            - Java20-int:
                 suites: [java20-interp]

    som:
        executions:
            - TruffleSOM-ast-HotspotCE-jit:
                suites: [som-steady]
            - TruffleSOM-bc-HotspotCE-jit:
                suites: [som-steady]
            - TruffleSOM-ast-NativeCE-int:
                suites: [som-interp]
            - TruffleSOM-ast-NativeCE-int-no-lower-prims:
                suites: [som-interp]
            
            - TruffleSOM-bc-NativeCE-int:
                suites: [som-interp]
            - TruffleSOM-bc-NativeCE-int-no-lower-prims:
                suites: [som-interp]

            - PySOM-ast-jit:
                suites: [som-steady]
            - PySOM-ast-int:
                suites: [som-interp]
            - PySOM-bc-jit:
                suites: [som-steady]
            - PySOM-bc-int:
                suites: [som-interp]

    js:
        executions:
            - Node-jit:
                suites: [js-jit]
            - Node-int:
                suites: [js-interp]